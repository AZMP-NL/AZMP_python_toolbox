'''
To generate AZMP score cards for bottom temperature

Uses pickled object generated by azmp_bottom_stats.py

'''

import numpy as  np
import matplotlib.pyplot as plt
import pandas as pd
import os

# plot tuning:
font = {'family' : 'sans-serif',
        'weight' : 'normal',
        'size'   : 13}
plt.rc('font', **font)
width = 0.7

#### ------------- For fall ---------------- ####
# 1.
infile = 'stats_2J_fall.pkl'
df = pd.read_pickle(infile)
df['area_colder0'] = df['area_colder0']/1000 # In 1000km
std_anom = (df-df.mean(axis=0))/df.std(axis=0)
std_anom2J = std_anom[['Tmean', 'Tmean_sha200']]

# 2.
infile = 'stats_3K_fall.pkl'
df = pd.read_pickle(infile)
df['area_colder0'] = df['area_colder0']/1000 # In 1000km
std_anom = (df-df.mean(axis=0))/df.std(axis=0)
std_anom3K = std_anom[['Tmean', 'Tmean_sha300']]

# 3.
infile = 'stats_3LNO_fall.pkl'
df = pd.read_pickle(infile)
df['area_colder0'] = df['area_colder0']/1000 # In 1000km
std_anom = (df-df.mean(axis=0))/df.std(axis=0)
std_anom3LNO = std_anom[['Tmean', 'Tmean_sha100']]

# 4. plot all merged together
std_anom_all = pd.concat([std_anom2J, std_anom3K, std_anom3LNO], axis=1)
df = std_anom_all.mean(axis=1)

fig = plt.figure(4)
fig.clf()
sign=df>0
df.plot(kind='bar', color=sign.map({True: 'darkorange', False: 'steelblue'}), width = width)
plt.ylabel('Mean Standardized Anomaly', weight='bold', fontsize=14)
#plt.xlabel('Year')
plt.title('Mean bottom temperature anomaly for 2J3KLNO - Fall', weight='bold', fontsize=14)
plt.grid()
plt.ylim([-2.5,2.5])
#plt.gca().set_xlim([pd.to_datetime('1979-01-01'), pd.to_datetime('2018-01-01')]) 
fig.set_size_inches(w=15,h=7)
fig_name = 'mean_anomalies_fall.png'
fig.savefig(fig_name)
os.system('convert -trim mean_anomalies_fall.png mean_anomalies_fall.png')




#### ------------- For Spring ---------------- ####
# 1.
infile = 'stats_3LNO_spring.pkl'
df = pd.read_pickle(infile)
df['area_colder0'] = df['area_colder0']/1000 # In 1000km
std_anom = (df-df.mean(axis=0))/df.std(axis=0)
std_anom3LNO = std_anom[['Tmean', 'Tmean_sha100']]

# 2.
infile = 'stats_3Ps_spring.pkl'
df = pd.read_pickle(infile)
df['area_colder0'] = df['area_colder0']/1000 # In 1000km
std_anom = (df-df.mean(axis=0))/df.std(axis=0)
std_anom3Ps = std_anom[['Tmean', 'Tmean_sha100']]

# 4. plot all merged together
std_anom_all = pd.concat([std_anom3LNO, std_anom3Ps], axis=1)
df = std_anom_all.mean(axis=1)

fig = plt.figure(5)
fig.clf()
sign=df>0
df.plot(kind='bar', color=sign.map({True: 'darkorange', False: 'steelblue'}), width = width)
plt.ylabel('Mean Standardized Anomaly', weight='bold', fontsize=14)
#plt.xlabel('Year')
plt.title('Mean bottom temperature anomaly for 3LNOPs - Spring', weight='bold', fontsize=14)
plt.grid()
plt.ylim([-2.5,2.5])
#plt.gca().set_xlim([pd.to_datetime('1979-01-01'), pd.to_datetime('2018-01-01')]) 
fig.set_size_inches(w=15,h=7)
fig_name = 'mean_anomalies_spring.png'
fig.savefig(fig_name)
os.system('convert -trim mean_anomalies_spring.png mean_anomalies_spring.png')
