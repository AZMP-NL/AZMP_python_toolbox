# -*- coding: utf-8 -*-
'''
To generate AZMP score cards for bottom temperature

Uses pickled object generated by azmp_bottom_stats.py

'''

import numpy as  np
import matplotlib.pyplot as plt
import pandas as pd
import os


clim_year = [1981, 2010]
years = [1950, 2018]

#### ---- Load the data and compute anomalies ---- ####
df_SI = pd.read_pickle('/home/cyrf0006/AZMP/state_reports/sections_plots/CIL/df_CIL_SI_summer.pkl')
df_BB = pd.read_pickle('/home/cyrf0006/AZMP/state_reports/sections_plots/CIL/df_CIL_BB_summer.pkl')
df_FC = pd.read_pickle('/home/cyrf0006/AZMP/state_reports/sections_plots/CIL/df_CIL_FC_summer.pkl')

df_years = df_SI[(df_SI.index>=years[0]) & (df_SI.index<=years[1])]
df_clim = df_SI[(df_SI.index>=clim_year[0]) & (df_SI.index<=clim_year[1])]
std_anom_SI = (df_years - df_clim.mean()) / df_clim.std()

df_years = df_BB[(df_BB.index>=years[0]) & (df_BB.index<=years[1])]
df_clim = df_BB[(df_BB.index>=clim_year[0]) & (df_BB.index<=clim_year[1])]
std_anom_BB = (df_years - df_clim.mean()) / df_clim.std()

df_years = df_FC[(df_FC.index>=years[0]) & (df_FC.index<=years[1])]
df_clim = df_FC[(df_FC.index>=clim_year[0]) & (df_FC.index<=clim_year[1])]
std_anom_FC = (df_years - df_clim.mean()) / df_clim.std()

# average quatities
std_core = pd.concat([std_anom_SI.core_itp, std_anom_BB.core_itp, std_anom_FC.core_itp], axis=1).mean(axis=1)
std_vol = pd.concat([std_anom_SI.vol_itp, std_anom_BB.vol_itp, std_anom_FC.vol_itp], axis=1).mean(axis=1)

std_core.index = pd.to_datetime(std_core.index, format='%Y')
std_vol.index = pd.to_datetime(std_vol.index, format='%Y')


#### ------------- plot ---------------- ####
## fig, ax = plt.subplots(nrows=2, ncols=1)
## sign=df>0
## df.plot(kind='bar', color=sign.map({True: 'indianred', False: 'steelblue'}), width = width)
## plt.ylabel('Standardized Anomaly', weight='bold', fontsize=14)
## #plt.xlabel('Year')
## plt.title('Mean bottom temperature anomaly for 2J3KLNO - Fall', weight='bold', fontsize=14)
## plt.grid()
## plt.ylim([-2.5,2.5])
## #plt.gca().set_xlim([pd.to_datetime('1979-01-01'), pd.to_datetime('2018-01-01')]) 
## fig.set_size_inches(w=15,h=7)



## ## ## ---- plot Figur ---- ##
## width = .5
## fig = plt.figure()
## # ax1
## ax = plt.subplot2grid((2, 1), (0, 0))
## sign=std_core>0
## std_core.plot(kind='bar', color=sign.map({True: 'indianred', False: 'steelblue'}), width = width)
## #plt.xticks(np.arange(1950, 2020, step=5))
## plt.xticks(std_core.index[::5])
## plt.ylabel('Standardized Anomaly')
## plt.title('CIL core temperature')
## plt.grid()
## plt.ylim([-2.5,2.5])
## ax.xaxis.label.set_visible(False)
## ax.tick_params(labelbottom='off')


## # ax2
## ax2 = plt.subplot2grid((2, 1), (1, 0))
## sign=std_vol>0
## std_vol.plot(kind='bar', color=sign.map({True: 'steelblue', False: 'indianred'}), width = width)
## plt.ylabel('Standardized Anomaly')
## plt.title('CIL volume')
## plt.grid()
## plt.ylim([-2.5,2.5])
## plt.xticks(np.arange(1950, 2020, step=5))

## fig_name = 'mean_CIL_anomalies.png'
## fig.savefig(fig_name, dpi=200)

## os.system('convert -trim mean_CIL_anomalies.png mean_CIL_anomalies.png')

## keyboard

## TEST 2 
fig = plt.figure(4)
fig.clf()
ax = plt.subplot2grid((2, 1), (0, 0))
df1 = std_core[std_core>0]
df2 = std_core[std_core<0]
width = 300
p1 = plt.bar(df1.index, np.squeeze(df1.values), width, alpha=0.8, color='indianred')
p2 = plt.bar(df2.index, np.squeeze(df2.values), width, bottom=0, alpha=0.8, color='steelblue')
plt.xticks(std_core.index[::10])
plt.ylabel('Standardized Anomaly')
plt.xlabel('Year')
plt.title('CIL core temperature')
plt.ylim([-3.5,3.5])
plt.grid()
ax.xaxis.label.set_visible(False)
ax.tick_params(labelbottom='off')
#plt.xlim(years)

ax2 = plt.subplot2grid((2, 1), (1, 0))
df3 = std_vol[std_vol>0]
df4 = std_vol[std_vol<0]
p1 = plt.bar(df3.index, np.squeeze(df3.values), width, alpha=0.8, color='steelblue')
p2 = plt.bar(df4.index, np.squeeze(df4.values), width, bottom=0, alpha=0.8, color='indianred')
plt.xticks(std_core.index[::10])
plt.ylabel('Standardized Anomaly')
#plt.xlabel('Year')
plt.title('CIL area')
plt.ylim([-3,3])
plt.grid()
#plt.xlim(years)

#fig.set_size_inches(w=15,h=9)
fig_name = 'mean_CIL_anomalies.png'
fig.savefig(fig_name, dpi=300)
os.system('convert -trim ' + fig_name + ' ' + fig_name)

keyboard

# Save French Figure
plt.sca(ax)
plt.ylabel(u'Anomalie normalisée', weight='bold', fontsize=14)
plt.title(u'Température de fond moyenne pour 2J3KLNO - Automne', weight='bold', fontsize=14)
#fig.set_size_inches(w=15,h=7)
fig_name = 'mean_anomalies_fall_FR.png'
fig.savefig(fig_name, dpi=200)
os.system('convert -trim ' + fig_name + ' ' + fig_name)
